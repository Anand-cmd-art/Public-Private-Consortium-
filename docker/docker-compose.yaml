

services:
  # Local Ethereum node (Geth in dev mode)
  ethereum:
    image: ethereum/client-go:stable
    command: ["--dev"]
    ports:
      - "8545:8545"

  # Flask API service
  flask-api:
    build: 
      context: ./app               # <-- Docker context is the "app" folder
      dockerfile: Dockerfile       # <-- Make sure the file is actually named "dockerfile" (lowercase) in /app
    container_name: flask_api
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://flaskuser:flaskpass@db:5432/flaskdb
      - FLASK_APP=app:create_app
       - WEB3_PROVIDER_URL=https://sepolia.infura.io/v3/ab433592545b48a7967c4d4a5b22036c
    depends_on:
      - db
      - ethereum
    command: flask run --host=0.0.0.0 --reload

  # PostgreSQL Database
  db:
    image: postgres:latest
    container_name: my_postgres
    environment:
      - POSTGRES_USER=flaskuser
      - POSTGRES_PASSWORD=flaskpass
      - POSTGRES_DB=flaskdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Optional separate "web" service if you want a second Flask container or a frontend
  # web:
  #   build: .                      # <-- This means Docker looks for a Dockerfile in the same folder as docker-compose.yaml
  #   container_name: flask_frontend
  #   depends_on:
  #     - db
  #     - ethereum
  #   environment:
  #     - DATABASE_URL=postgresql://flaskuser:flaskpass@db:5432/flaskdb
  #     # - WEB3_PROVIDER_URL=http://ethereum:8545
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - .:/app
  #   command: flask run --host=0.0.0.0 --reload

volumes:
  postgres_data:
